apis:
  openapi:
    root: openapi/openapi.yaml
lint:
  extends:
    - recommended
  plugins:
    - ./plugins/custom-rules.js
    - ./plugins/discriminator-mapper.js
    - ./plugins/products-bundler/bundler.js
  rules:
    no-ambiguous-paths: error
    no-unused-components: error
    operation-2xx-response: error
    operation-operationId: error
    operation-singular-tag: error
    operation-tag-defined: error
    operation-4xx-response: off
    paths-kebab-case: error
    tag-description: error
    custom-rules/description-punctuation: error
    custom-rules/no-unused-tags: warn

    # newly proposed rules
    # operation-description: warn
    # scalar-property-missing-example: error
    # no-invalid-schema-examples: error
    no-invalid-parameter-examples: error
    # assert/params-must-include-examples:
    #   subject: Parameter
    #   requireAny:
    #     - example
    #     - examples
    #   mutuallyExclusive:
    #     - example
    #     - examples
    #   message: Example XOR examples should be defined on a parameter.

    assert/headers-include-example:
      subject: Header
      property: example
      defined: true
      nonEmpty: true

    assert/path-must-be-ref-file:
      subject: PathItem
      context:
        - type: PathMap
      ref: /^(.\/paths|paths)\/.*yaml$/

    assert/x-sdk-operation-name:
      context:
        - type: PathMap
      subject: Operation
      property: x-sdk-operation-name
      casing: camelCase
      defined: true

    assert/operation-id-delete:
      context:
        - type: Operation
          matchParentKeys:
            - delete
      subject: Operation
      property: operationId
      pattern: /Delete/
      casing: PascalCase

    assert/operation-id-get:
      context:
        - type: Operation
          matchParentKeys:
            - get
      subject: Operation
      property: operationId
      pattern: /Get/
      casing: PascalCase

    assert/operation-id-patch:
      context:
        - type: Operation
          matchParentKeys:
            - patch
      subject: Operation
      property: operationId
      pattern: /Patch/

    assert/operation-id-post:
      context:
        - type: PathMap
        - type: Operation
          matchParentKeys:
            - post
      subject: Operation
      property: operationId
      pattern: /Post/
      casing: PascalCase

    assert/operation-id-put:
      context:
        - type: Operation
          matchParentKeys:
            - put
      subject: Operation
      property: operationId
      pattern: /Put/
      casing: PascalCase

    assert/tag-description:
      subject: Tag
      property: description
      message: Tag description must be at least 30 characters and end with a full stop.
      severity: error
      defined: true
      minLength: 30
      pattern: /(\.|\.\n)$/
    # assert/operation-description:
    #   subject: Operation
    #   property: description
    #   message: Operation description must be at least 30 characters and end with a full stop.
    #   severity: error
    #   defined: true
    #   minLength: 30
    #   pattern: /(\.|\.\n)$/
    assert/info-description:
      subject: Info
      property: description
      message: Info description must be at least 30 characters and end with a full stop.
      severity: error
      defined: true
      minLength: 30
      pattern: /(\.|\.\n)$/
    assert/operation-summary:
      subject: Operation
      property: summary
      message: Operation summary must be between 10 and 60 characters and not end with a full stop.
      severity: error
      defined: true
      minLength: 10
      maxLength: 60
      pattern: /[^\.]$/
    # assert/schema-properties-both-created-time-and-updated-time:
    #   subject: SchemaProperties
    #   message: The createdTime and updatedTime properties are mutually required.
    #   severity: error
    #   mutuallyRequired:
    #     - createdTime
    #     - updatedTime

    # assert/put-200-and-201:
    #   subject: ResponsesMap
    #   context:
    #     - type: Operation
    #       matchParentKeys:
    #         - put
    #   message: Must mutually define 200 and 201 responses for PUT requests.
    #   severity: error
    #   mutuallyRequired:
    #     - '200'
    #     - '201'

    assert/no-x-code-samples:
      subject: Operation
      message: x-code-samples should be x-codeSamples
      severity: error
      disallowed:
        - x-code-samples

    assert/no-x-internal:
      subject: Operation
      message: This is in a public repository. Do not include internal APIs.
      severity: error
      disallowed:
        - x-internal

        # Need to account for arrays, etc...
    # assert/mediatype-schema-ref-pattern:
    #   subject: MediaType
    #   property: schema
    #   message: Ref needs to point to components directory.
    #   ref: /^(\.\.\/)?(components|schemas)\/.*\.yaml$/


  decorators:
    products-bundler/bundle: error
  preprocessors:
    discriminator-mapper/enum: warn
features.openapi:
  pagination: item
  theme:
    logo:
      gutter: 20px 30px 14px 30px
    colors:
      primary:
        main: '#0044D4'
      text:
        primary: '#0D2B3E'
    typography:
      headings:
        fontFamily: Roboto
      fontFamily: 'Roboto, Verdana, Geneva, sans-serif'
      fontSize: 14px
      code:
        fontFamily: '"Courier New",monospace'
      rightPanelHeading:
        color: white
    rightPanel:
      backgroundColor: '#505A6F'
    codeBlock:
      backgroundColor: '#0D2B3E'
    links:
      color: '#6CC496'
  htmlTemplate: ./web/index.html
  generateCodeSamples:
    languages:
      - lang: curl
      - lang: Node.js
      - lang: C#
      - lang: Python
      - lang: Java
      - lang: Go
      - lang: Ruby
      - lang: PHP
  schemaExpansionLevel: '2'
  maxDisplayedEnumValues: 10
  hideTryItPanel: false
  expandResponses: '200,201'
  requiredPropsFirst: true
