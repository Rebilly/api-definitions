type: object
discriminator:
  propertyName: resource
  mapping:
    customers: ./resources/customers.yaml
    subscriptions: ./resources/subscriptions.yaml
    transactions: ./resources/transactions.yaml
    invoices: ./resources/invoices.yaml
    invoiceItems: ./resources/invoiceItems.yaml
    revenueAudit: ./resources/revenueAudit.yaml
required:
  - name
  - format
  - resource
properties:
  id:
    description: ID of the export.
    readOnly: true
    allOf:
      - $ref: ../ResourceId.yaml
  name:
    description: Name of the export.
    type: string
  resource:
    description: Type of resource to export.
    type: string
    enum:
      - transactions
      - customers
      - subscriptions
      - invoices
      - invoiceItems
      - revenueAudit
  format:
    description: Output format of the export.
    type: string
    enum:
      - csv
      - json
      - json-api
      - xml
      - pdf
  arguments:
    description: |-
      Export request arguments used to filter and sort the result set.
      For more information, see [Arguments](https://www.rebilly.com/docs/dev-docs/transaction-reconciliation/#arguments).
    type: object
    properties:
      filter:
        description: |-
          Filters the collection items.
          This field requires a special format.
          Use `,` for multiple allowed values. Use `;` for multiple fields.

          For more information, see [Using filter with collections](#section/Using-filter-with-collections).
        type: string
      sort:
        type: string
        description: |-
          Sorts and orders the collection of items.
          To sort in descending order, prefix with `-`.
      q:
        type: string
        description: Use this field to perform a partial search of text fields.
  emailNotification:
    description: List of email addresses to notify when an export is completed.
    type: array
    items:
      type: string
      format: email
  fields:
    description: |-
      List of fields to include in the export.
      For more information, see [Arguments](https://www.rebilly.com/docs/dev-docs/transaction-reconciliation/#fields).
    type: array
    items:
      type: string
  recurring:
    description: Recurring export schedule.
    type: object
    required:
      - instruction
    properties:
      instruction:
        type: string
        description: Schedule instruction in [Recurrence Rule RFC 5545](https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html) format.
      start:
        type: string
        format: date-time
        description: |-
          Date and time when the first scheduled recurring export occurs.
          The default value is `now`.
  userId:
    description: ID of the user who requested the data export.
    readOnly: true
    type: string
  recordCount:
    description: Total number of records in the export, excluding the header row.
    readOnly: true
    type: integer
  scheduledTime:
    description: Date and time when the data export is scheduled to generate a file.
    allOf:
      - $ref: ../ServerTimestamp.yaml
  createdTime:
    $ref: ../CreatedTime.yaml
  updatedTime:
    $ref: ../UpdatedTime.yaml
  status:
    description: Status of export request.
    readOnly: true
    type: string
    enum:
      - pending
      - queued
      - processing
      - completed
  _links:
    type: array
    description: Related resource links.
    readOnly: true
    minItems: 1
    maxItems: 4
    items:
      anyOf:
        - $ref: ../Links/LinkSelf.yaml
        - $ref: ../Links/LinkUser.yaml
        - $ref: ../Links/LinkFileDownload.yaml
        - $ref: ../Links/LinkSignedLink.yaml
