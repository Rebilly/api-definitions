type: object
required:
  - type
  - items
properties:
  id:
    type: string
    description: ID of the order.
    readOnly: true
    maxLength: 50
    example: ord_01GYJPRKHBD6ZYHH897QCJMBS4
  type:
    description: Specifies the type of order.
    type: string
    x-basic: true
    enum:
      - one-time-sale
  status:
    description: Status of the one-time order.
    type: string
    readOnly: true
    enum:
      - pending
      - abandoned
      - completed
      - canceled
  currency:
    description: Currency of the order.
    readOnly: true
    $ref: ./CurrencyCode.yaml
  items:
    description: Details of items in the order.
    type: array
    minItems: 1
    items:
      $ref: ./OrderItem.yaml
  voidTime:
    description: Date and time when the order is voided.
    type:
      - 'string'
      - 'null'
    format: date-time
    readOnly: true
  abandonTime:
    type:
      - 'string'
      - 'null'
    description: |-
      Date and time when the pending order is automatically abandoned.
      If this value is not passed during order creation,
      a [pending order TTL](https://www.rebilly.com/catalog/all/Organizations/PatchOrganization/#!t=request&path=settings/billing/pendingOrderTtl) setting is used to calculate the value.
    format: date-time
  couponIds:
    type:
      - 'array'
      - 'null'
    description: |-
      List of coupons to redeem on the customer and restrict to this order.

      For more information, see [Coupons](https://www.rebilly.com/docs/settings/coupons-and-discounts/).

      This parameter uses the following logic:

      - If this parameter is not supplied, applied coupons are not changed.
      - If an empty array is supplied, all applied coupon redemptions are canceled.
      - If a list of coupons is supplied, unapplied coupons in the list are applied.
        Coupons that have already been applied do not change state.
        Applied coupons that are not supplied in list are canceled.

      If the list of applied coupons on a pending order is changed by this parameter during an order update, the invoice for the order is reissued.
    writeOnly: true
    items:
      type: string
      description: ID of the coupon.
  shipping:
    $ref: ./Shipping.yaml
  revision:
    description: |-
      Number of times the order data has been modified.

      The revision is useful when analyzing webhook data to determine if the
      change takes precedence over the current representation.
    type: integer
    readOnly: true
  riskMetadata:
    example: null
    description: |-
      Risk metadata.
      If this value is `null`, this field uses risk metadata that is captured when creating the payment token.
    oneOf:
      - $ref: ./RiskMetadata.yaml
      - type: 'null'
  customFields:
    $ref: ./ResourceCustomFields.yaml
  createdTime:
    $ref: ./CreatedTime.yaml
  updatedTime:
    $ref: ./UpdatedTime.yaml
  _links:
    type: array
    description: Related links.
    readOnly: true
    items:
      type: object
      properties:
        href:
          description: Link URL.
          type: string
        rel:
          description: Type of link.
          type: string
          enum:
            - self
            - website
            - customer
            - initialInvoice
            - recentInvoice
            - approvalUrl
            - attachments
  _embedded:
    type: object
    description: Embedded objects that are requested by the `expand` query parameter.
    readOnly: true
    properties:
      recentInvoice:
        type: object
      customer:
        type: object
      website:
        type: object
      leadSource:
        type: object
      shippingRate:
        type: object
      paymentInstrument:
        type: object
