type: object
required:
  - type
  - planId
properties:
  id:
    type: string
    description: ID of the order item.
    readOnly: true
    maxLength: 50
    example: ord_01GYJPRKHBD6ZYHH897QCJMBS4
  type:
    description: Specifies the type of order.
    type: string
    x-basic: true
    enum:
      - subscription
  renewalReminderTime:
    description: Date and time when the renewal reminder event triggers.
    type:
      - 'string'
      - 'null'
    format: date-time
    readOnly: true
  renewalReminderNumber:
    description: Number of triggered renewal reminder events.
    type:
      - 'integer'
      - 'null'
    readOnly: true
  trialReminderTime:
    description: Date and time when the trial reminder event triggers.
    type:
      - 'string'
      - 'null'
    format: date-time
    readOnly: true
  trialReminderNumber:
    description: Number of triggered trial reminder events.
    type:
      - 'integer'
      - 'null'
    readOnly: true
  status:
    description: |-
      Status of the subscription service.
      A subscription starts in the `pending` status, and becomes `active` when the service period begins.
    type: string
    readOnly: true
    enum:
      - pending
      - active
      - abandoned
      - canceled
      - churned
      - paused
      - voided
      - completed
      - trial-ended
  inTrial:
    description: Specifies if the subscription is currently in a trial period.
    type: boolean
    readOnly: true
  isTrialEnabled:
    description: |-
      Specifies if there is a trial for this subscription.
      Plans without trial prices are free trials.
    type: boolean
  trialEndTime:
    description: |-
      Time and date when the trial ends.
      If a trial is enabled on this subscription, a value must be provided.
    type:
      - 'string'
      - 'null'
    format: date-time
  isTrialOnly:
    description: |-
      Specifies if a subscription ends after a trial period.
      If this value is `true`, recurring settings are ignored.
    type: boolean
    default: false
  isTrialConverted:
    description: |-
      Specifies if a subscription had trial conversion.
      Trial conversion is when at least one successful payment is made on the subscription after a trial.
    type: boolean
    readOnly: true
    example: true
  recurringInterval:
    type:
      - 'object'
      - 'null'
    description: |-
      Recurring interval to override plan settings.
      To use plan settings, set this value to `null`.

      To use multiple plans in one subscription,
      all plans must have the same recurring period length.
    example: null
    properties:
      periodAnchorInstruction:
        $ref: ./ServicePeriodAnchorInstruction.yaml
  endTime:
    description: Date and time when the subscription ends.
    x-sortable: true
    type:
      - 'string'
      - 'null'
    format: date-time
    readOnly: true
  renewalTime:
    description: Date and time when the subscription renews.
    type:
      - 'string'
      - 'null'
    x-sortable: true
    x-basic: true
    format: date-time
  rebillNumber:
    description: Current billing period number.
    type:
      - 'integer'
      - 'null'
    readOnly: true
    x-sortable: true
  currency:
    description: Currency of the order.
    readOnly: true
    $ref: ./CurrencyCode.yaml
  planId:
    description: ID of the plan.
    x-basic: true
    type: string
    maxLength: 50
    example: plan_0YV7DENSVGDBW9S71XZNNYYQ0X
  planOverride:
    description: Details of the plan.
    anyOf:
      - $ref: ./OriginalPlan.yaml
      - $ref: ./FlexiblePlan.yaml
    deprecated: true
  quantity:
    description: Number of product units in the specified plan.
    type: integer
  quantityFilled:
    description: Number of filled product units.
    type: integer
  usageLimits:
    type: object
    description: |-
      Specifies the soft and hard usage limit thresholds for a subscription with a metered billing plan.
      This value is ignored when the plan is not metered.
    properties:
      softLimit:
        type: object
        description: |-
          Defines thresholds for notification purposes.
          For example, to notify the customer that their usage is near the hard limit of their metered billing plan.
          This notification informs the customer so that they can upgrade their plan before the hard limit is reached.
          When the reported usage reaches 75%, 90%, and 100% of the configured limit a specific event is fired.
          To notify the customer, a webhook and notification can be configured for this event.
          This field is useful for accounting and customer success purposes.
          The usage of metered billing plans can still be reported if the soft limit is reached.
        minProperties: 1
        maxProperties: 1
        properties:
          quantity:
            type: integer
            description: Usage limit quantity.
            minimum: 1
          amount:
            type: number
            format: double
            description: Usage limit amount in the currency of the order.
            minimum: 0.01
      hardLimit:
        type: object
        description: |-
          Defines a limit where the customer can no longer use the service.
          Hard limits are used in addition to soft limits.
          When a soft limit is reached,
          a customer may receive a notification
          but the service can still be provided up to the hard limit value so that the customer can upgrade their plan.
          When the reported usage reaches the configured limit,
          a specific event is triggered.
          To notify the customer in the merchant system,
          or block a service,
          a webhook and notification can be configured for this event.
          When the total usage reaches the hard limit quantity,
          or amount values,
          metered billing plan usages can no longer be reported.
        minProperties: 1
        maxProperties: 1
        properties:
          quantity:
            type: integer
            description: Usage limit quantity.
            minimum: 1
          amount:
            type: number
            format: double
            description: Usage limit amount in the currency of the order.
            minimum: 0.01
  voidTime:
    description: Date and time when the order is voided.
    type:
      - 'string'
      - 'null'
    format: date-time
    readOnly: true
  abandonTime:
    type:
      - 'string'
      - 'null'
    description: |-
      Date and time when the pending order is automatically abandoned.
      If this value is not passed during order creation,
      a [pending order TTL](https://www.rebilly.com/catalog/all/Organizations/PatchOrganization/#!t=request&path=settings/billing/pendingOrderTtl) setting is used to calculate the value.
    format: date-time
  delinquencyPeriod:
    type:
      - 'string'
      - 'null'
    description: |-
      Length of time, in ISO-8601 durations format,
      which is added to the due time of the order when setting the delinquency time for all related invoices.
      When the delinquency time of an invoice is reached, the order is automatically canceled.

      If the provided value is `null`, the order does not change state.
    example: P7D
    default: null
  couponIds:
    type:
      - 'array'
      - 'null'
    description: |-
      List of coupons to redeem on the customer and restrict to this order.

      For more information, see [Coupons](https://www.rebilly.com/docs/settings/coupons-and-discounts/).

      This parameter uses the following logic:

      - If this parameter is not supplied, applied coupons are not changed.
      - If an empty array is supplied, all applied coupon redemptions are canceled.
      - If a list of coupons is supplied, unapplied coupons in the list are applied.
        Coupons that have already been applied do not change state.
        Applied coupons that are not supplied in list are canceled.

      If the list of applied coupons on a pending order is changed by this parameter during an order update, the invoice for the order is reissued.
    writeOnly: true
    items:
      type: string
      description: ID of the coupon.
  shipping:
    $ref: ./Shipping.yaml
  canceledBy:
    description: Specifies who initiated the cancellation.
    type:
      - 'string'
      - 'null'
    readOnly: true
    enum:
      - merchant
      - customer
      - rebilly
      - null
  cancelCategory:
    description: Category of the cancellation.
    type:
      - 'string'
      - 'null'
    readOnly: true
    enum:
      - billing-failure
      - did-not-use
      - did-not-want
      - missing-features
      - bugs-or-problems
      - do-not-remember
      - risk-warning
      - contract-expired
      - too-expensive
      - never-started
      - switched-plan
      - other
      - null
  cancelDescription:
    description: Description of the cancellation reason in free form.
    type:
      - 'string'
      - 'null'
    readOnly: true
    maxLength: 255
  revision:
    description: |-
      Number of times the order data has been modified.

      The revision is useful when analyzing webhook data to determine if the
      change takes precedence over the current representation.
    type: integer
    readOnly: true
  customFields:
    $ref: ./ResourceCustomFields.yaml
  createdTime:
    $ref: ./CreatedTime.yaml
  updatedTime:
    $ref: ./UpdatedTime.yaml
