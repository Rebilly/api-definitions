type: object
required:
  - brackets
  - formula
properties:
  formula:
    type: string
    description: |-
      Price formula that determines which algorithm is used to calculate the invoice price based on the following factors:

      - Quantity in the order.
        This value may be variable if you are charging based on usage.
        If you are not charging based on usage,
        this value is determined when an order is created.

      - Price of the quantity range.
        Some formulas set a price based on defined product quantity ranges.

      For more information, see [Price formulas](https://www.rebilly.com/docs/billing/pricing-formulas/).
    enum:
      - tiered
  brackets:
    description: |-
      Use this formula to charge for units that are sold within defined quantity ranges, or tiers.
      If a customer buys a number of units that span more than one tier,
      the total cost is calculated based on the cost of the units in each tier.

      For example, a software company sells user licenses based on the following:

      Tier | Price per user | Max quantity | Description
      -----|----------------|--------------|------------
      1    | $40            | 3            | 1 to 3 user licenses
      2    | $30            | 5            | 5 to 8 user licenses
      3    | $15            | null         | 9 or more user licenses

      If a customer buys 10 user licenses, the pricing is as follows:
      - 3 licenses at tier 1 (3 x $40) is 120
      - 5 licenses at tier 2 (5 x $30) is 150
      - 2 licenses at tier 3 (2 x $15) is 30

      Total cost = $330

      Formula: `(price for the tier x quantity within the tier)` + `(price for next tier x quantity in next tier)` + `...` = final price.
    type: array
    minItems: 1
    items:
      type: object
      properties:
        price:
          description: |-
            Price of the quantity range.
            If the value of this field is `0`, the product is free.
          type: number
          format: double
          example: 99.95
        maxQuantity:
          description: |-
            Maximum permitted unit quantity.
            If this value is `null`, no limit is in place.

            This value starts from the end of the previous quantity range.
            If there are no previous quantity ranges,
            this value starts at 1.
          type: integer
          nullable: true
          example: 1
          minimum: 1
          maximum: 65535
  minQuantity:
    description: |-
      Minimum permitted unit quantity.
      If this value is `null`, no limit is in place.
    type: integer
    nullable: true
    default: null
    example: 1
    minimum: 1
    maximum: 65535
