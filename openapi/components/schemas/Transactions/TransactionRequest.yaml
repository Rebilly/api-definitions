required:
  - type
  - websiteId
  - customerId
  - currency
  - amount
type: object
properties:
  upsertCustomer:
    type: boolean
    default: false
    writeOnly: true
    description: |-
      Specifies whether to create or update (upsert) a customer.
      If this value is `true`, the operation creates or updates (upserts) a customer.
      If this value is `false`, the `customerId` already exists, and the related customer is not updated.
  type:
    description: |-
      Type of transaction.

      This field supports a limited subset of transaction types.
      To refund or void, see [Refund a transaction](../PostTransactionRefund).

      To `capture`, use the `sale` type.
      If any existing `authorize` transactions are eligible,
      they are captured and the `sale` converts to a `capture` type.

      The `setup` type sets up the payment instrument by following the `setupInstruction` in the selected gateway account.
      If the instruction is to `do-nothing`, a transaction with result `approved` of type `setup` returns.
    type: string
    enum:
      - sale
      - authorize
      - setup
  limits:
    $ref: ../TransactionLimitAmount.yaml
  websiteId:
    $ref: ../Websites/WebsiteId.yaml
  customerId:
    $ref: ../CustomerId.yaml
  currency:
    $ref: ../CurrencyCode.yaml
  amount:
    description: Amount of the transaction.
    type: number
    format: double
    example: 97.97
  invoiceIds:
    description: Array of invoice IDs.
    nullable: true
    type: array
    items:
      $ref: ../ResourceId.yaml
  paymentInstruction:
    description: |-
      Payment instruction for the purchase.
      If this value is not supplied,
      the customer's default payment instrument is used.
    allOf:
      - $ref: ../PaymentInstruction.yaml
  billingAddress:
    description: |-
      Billing address.
      If this value is not supplied,
      the billing address associated with the payment instrument is used.
      If no billing address is associated with the payment instrument,
      the customer's billing address is used.
    nullable: true
    type: object
    allOf:
      - $ref: ../Contact/ContactObject.yaml
  requestId:
    description: |-
      Use this field to prevent duplicate transaction requests that may occur within a short period of time.
      If a duplicate request is sent with the same `requestId`,
      it is ignored to prevent double-billing.
      This value must be unique within a 24-hour period.

      > **Important:** This field is recommended.
    type: string
    nullable: true
    maxLength: 50
    pattern: '^[\-\w]+$'
    example: 44433322-2c4y-483z-a0a9-158621f77a21
  gatewayAccountId:
    description: |-
      ID of the gateway account.
      Rebilly selects the payment gateway account for the transaction based on transaction properties and the rules configuration of the `gateway-account-requested` event.
      To prevent Rebilly from making the gateway account selection,
      supply a gateway account ID in this field.
      Only use this field if you intend to override the settings.
    nullable: true
    type: string
    maxLength: 50
    example: gw_acc_0YVCXMF26DDNKAERE5NW727S34
  description:
    nullable: true
    description: Payment description.
    type: string
    maxLength: 255
  notificationUrl:
    nullable: true
    description: |-
      URL where a server-to-server `POST` notification is sent.
      This notification is sent when the transaction result is finalized after a timeout or an offsite interaction.
      
      Do not trust this notification alone,
      complete a `GET` request to confirm the result of the transaction.
      To ensure the request is not reattempted,
      when the result is confirmed, respond with a `2xx` HTTP status code.
      
      The following placeholders are available to use in this URI: `{id}` and `{result}`.
      These placeholders are replaced the with the transaction ID and result accordingly.
    type: string
    format: uri
  redirectUrl:
    nullable: true
    description: |-
      URL to redirect the end-user when an offsite transaction is completed.
      Defaults to the configured URL of the website.
      You may use `{id}` or `{result}` as placeholders in the URL, 
      these are replaced the with the transaction ID and result accordingly.
    type: string
    format: uri
  customFields:
    $ref: ../ResourceCustomFields.yaml
  riskMetadata:
    $ref: ../RiskMetadata.yaml
  isProcessedOutside:
    description: Specifies when the transaction is processed outside Rebilly.
    type: boolean
    default: false
  isMerchantInitiated:
    description: Specifies when the transaction is initiated by the merchant.
    type: boolean
    default: false
  processedTime:
    type: string
    description: |-
      Time the transaction is processed.
      This field is only specified if the transaction is processed outside Rebilly.
    format: date-time
