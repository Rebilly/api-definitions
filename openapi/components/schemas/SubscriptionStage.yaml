type: object
description: |-
  Subscription stages are sequences of periods in a subscription that have configured settings.
  Subscription stages can be followed by subsequent stages that have different subscription settings.
  A stage change is similar to the creation of a new subscription, but the stage uses the same subscription identifier along with the period number of the subsequent stage.

  A stage with a period number of `1` is always implicitly created when a subscription order is created.
  This feature is not applicable for one-time sales.

  A new stage may create a separate invoice if there are postpaid items on the stage,
  before moving to the next stage with the appropriate initial invoice.

  A new stage can be created for a canceled or a churned subscription.
  If the subscription is churned, it is assigned the `pending` status until the start date.
properties:
  subscriptionId:
    description: ID of the subscription.
    type: string
    maxLength: 50
    example: ord_01GYJPRKHBD6ZYHH897QCJMBS4
    readOnly: true
  customerId:
    readOnly: true
    allOf:
      - $ref: ./CustomerId.yaml
  organizationId:
    readOnly: true
    allOf:
      - $ref: ./OrganizationId.yaml
  websiteId:
    readOnly: true
    x-sortable: true
    x-basic: true
    allOf:
      - $ref: ./WebsiteId.yaml
  number:
    description: Unique consecutive number of the stage.
    type: integer
    minimum: 1
    readOnly: true
  status:
    description: Status of the stage.
    type: string
    enum:
      - "active"
      - "completed"
      - "upcoming"
    readOnly: true
  fromServicePeriod:
    description: |-
      Number of service period when this subscription stage starts and the previous stage ends.
      If this field is omitted, this value defaults to the next service period for the given subscription,
      unless it conflicts with previous upcoming stages.
    type: integer
    minimum: 0
  activationPolicy:
    description: Specifies what is required for the stage to start the subscription. Starting the subscription moves it from the `pending` to `active` status.
    type: string
    enum:
      - "immediately"
      - "after-initial-invoice-payment"
      - "after-invoices-payment"
    default: "after-initial-invoice-payment"
    x-enumDescriptions:
      immediately: Start the subscription immediately when the stage begins.
      after-initial-invoice-payment: Start the subscription after the generated initial invoice for the stage is paid.
      after-invoices-payment: |-
        Start the subscription after all the related invoices are paid or closed otherwise (voided, abandoned).
        The related invoices include the initial invoice and all unpaid or past-due invoices for the subscription in the past.
  initialInvoiceId:
    description: ID of the initial invoice of this stage.
    readOnly: true
    type:
      - "string"
      - "null"
    maxLength: 50
    example: in_0YVF9605RKC62BP14NE2R7V2XT
  revision:
    description: Number of times the stage data has been modified.
    type: integer
    readOnly: true
  createdTime:
    $ref: ./CreatedTime.yaml
  updatedTime:
    $ref: ./UpdatedTime.yaml
  stagedSubscription:
    type: object
    required:
      - items
    properties:
      invoiceTimeShift:
        description: |-
          Shifts issue time and due time of invoices for this subscription.

          This setting overrides plan settings.
          To use plan settings, set this value to `null`.

          To use multiple plans in one subscription,
          all plans must have the same billing period,
          this property enables the customer to subscribe to different plans.
        type:
          - "object"
          - "null"
        example: null
        allOf:
          - $ref: ./InvoiceTimeShift.yaml
      recurringInterval:
        type:
          - "object"
          - "null"
        description: |-
          Recurring interval to override plan settings.
          To use plan settings, set this value to `null`.

          To use multiple plans in one subscription,
          all plans must have the same recurring period length.
        example: null
        properties:
          periodAnchorInstruction:
            $ref: ./ServicePeriodAnchorInstruction.yaml
      autopay:
        description: |-
          Specifies if payment attempts are made automatically.
          If autopay is enabled, the payment is retrieved from the customer on the renewal date using the payment instrument that is set at `paymentInstrumentId`,
          or the default payment instrument on the subscription.
        type: boolean
        default: true
      startTime:
        description: |-
          Date and time when the subscription starts.
          If this value is `null`, the current time is used.
          This value cannot be more than one service period in the past.
          If the `fromServicePeriod` value of the related stage number is greater than current service period number plus 1, this value is ignored.
        type:
          - "string"
          - "null"
        x-basic: true
        example: null
        format: date-time
      renewalTime:
        description: |-
          Date and time when the subscription renews.
          If the `fromServicePeriod` value of the related stage number is greater than current service period number plus 1, this value is ignored.
        x-basic: true
        format: date-time
        type:
          - "string"
          - "null"
      paymentInstrumentId:
        description: |-
          ID of the payment instrument to use for autopay.
          If this value is not provided, or if the payment instrument is inactive,
          the customer's default payment instrument is used.
        type:
          - "string"
          - "null"
        maxLength: 50
        example: inst_0YVB8KPKNXCBR9EDX7JHSED75N
      currency:
        description: Currency of the order.
        readOnly: true
        allOf:
          - $ref: ./CurrencyCode.yaml
      items:
        description: Item details.
        type: array
        minItems: 1
        items:
          $ref: ./OrderItem.yaml
      deliveryAddress:
        description: Delivery address of the order.
        oneOf:
          - $ref: ./ContactObject.yaml
          - type: "null"
      billingAddress:
        description: Billing address of the order.
        oneOf:
          - $ref: ./ContactObject.yaml
          - type: "null"
      couponIds:
        type:
          - "array"
          - "null"
        description: |-
          List of coupons to redeem on the customer and restrict to this order.

          For more information, see [Coupons](https://www.rebilly.com/docs/settings/coupons-and-discounts/).

          This parameter uses the following logic:

          - If null or nothing is supplied, applied coupons are not changed.
          - If an empty array is supplied, all applied coupon redemptions are canceled.
          - If a list of coupons is supplied, non-applied coupons in the list are applied.
            Coupons that have already been applied do not change state.
            Applied coupons that are not supplied in list are canceled.

          If the list of applied coupons on a pending order is changed by this parameter during an order update, the invoice for the order is reissued.
        items:
          type: string
          description: ID of the coupon.
      poNumber:
        description: Purchase order number that is displayed on the issued invoices.
        example: PO123456
        type:
          - "string"
          - "null"
      shipping:
        $ref: ./Shipping.yaml
      notes:
        description: Notes for the customer that are displayed on the order invoice.
        type: string
      customFields:
        $ref: ./ResourceCustomFields.yaml
  _links:
    type: array
    description: Related links.
    readOnly: true
    items:
      type: object
      properties:
        href:
          description: Link URL.
          type: string
        rel:
          description: Type of link.
          type: string
          enum:
            - self
            - website
            - customer
            - initialInvoice
            - subscription
  _embedded:
    type: object
    description: Embedded objects that are requested by the `expand` query parameter.
    readOnly: true
    properties:
      initialInvoice:
        type: object
      customer:
        type: object
      website:
        type: object
      paymentInstrument:
        type: object
      subscription:
        type: object
