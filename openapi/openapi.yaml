openapi: 3.0.3
info:
  version: "2.1"
  title: Rebilly API
  contact:
    name: "Rebilly API Support"
    url: "https://www.rebilly.com/contact/"
    email: "integrations@rebilly.com"
  license:
    name: "Rebilly"
    url: 'https://www.rebilly.com/api-license/'
  termsOfService: 'https://www.rebilly.com/terms-of-use/'
  x-logo:
    url: 'https://rebilly-core.redoc.ly/rb_apiLogo.svg'
    backgroundColor: '#0033A0'
  description:
    $ref: description.md

security:
  - SecretApiKey: []
  - JWT: []

servers:
  - url: 'https://api-sandbox.rebilly.com/organizations/{organizationId}'
    description: Sandbox server
    variables:
      organizationId:
        default: unknown
        description: |-
          Your organization ID. The organization ID describes your
          organization in Rebilly. For information on how to obtain
          your organization ID, see
          [Obtain your organization ID and website ID](https://www.rebilly.com/docs/settings/organizations-and-websites/#obtain-your-organization-id-and-website-id).
  - url: 'https://api.rebilly.com/organizations/{organizationId}'
    description: Live server
    variables:
      organizationId:
        default: unknown
        description: |-
          Your organization ID. The organization ID describes your
          organization in Rebilly. For information on how to obtain
          your organization ID, see
          [Obtain your organization ID and website ID](https://www.rebilly.com/docs/settings/organizations-and-websites/#obtain-your-organization-id-and-website-id).

components:
  securitySchemes:
    JWT:
      $ref: components/securitySchemes/JWT.yaml
    ApplicationJWT:
      $ref: components/securitySchemes/ApplicationJWT.yaml
    PublishableApiKey:
      $ref: components/securitySchemes/PublishableApiKey.yaml
    SecretApiKey:
      $ref: components/securitySchemes/SecretApiKey.yaml
    CustomerJWT:
      $ref: components/securitySchemes/CustomerJWT.yaml

tags:
  - name: AML
    description: |-
      Use Anti-Money Laundering (AML) operations to screen customers
      and help prevent your business from becoming directly or
      indirectly involved in criminal activity.

      Use AML operations during customer creation, and some
      transaction processing, to help determine if a potential
      customer (lead), or customer, has political or economic sanctions
      against them.

      AML operations search the following for screening purposes:
      Politically Exposed Persons (PEPs) lists, sanction lists,
      and adverse media lists.
  - name: Blocklists
    description: |-
      Use blocklists to prevent fraud and criminal activity.

      Blocklists are lists of customer attribute values that are
      blocked from buying from you. For example, if a customer
      attempts to make a purchase from you with a credit card that is
      in a blocklist, the transaction is blocked and will not be
      processed.

      Before a new transaction is processed in Rebilly, blocklists
      are examined to check for attributes related to the entity.
      If a match is detected, the operation is aborted. A blocklist
      that expires after a period of time is called a greylist.
  - name: Coupons
    description: |-
      Use coupons to reward customers, generate sales, or to test
      new pricing strategies. Coupons enable you to apply different
      types of discounts to invoices, subscriptions, and pricing
      plans.

      Redeemed coupons are attached to a customer's account.
      Depending on the coupon's restrictions, the redeemed coupons
      are then applied from the customer's account to subsequent
      invoices or subscriptions. Redeemed coupons can only be applied
      to invoices of the same currency.

      Once a coupon is redeemed it cannot be modified. You may
      deactivate a coupon or create a new coupon, but you cannot
      reuse the same coupon code. If you have a use case where you
      must reuse the same code,
      [contact Rebilly](https://www.rebilly.com/contact/).
  - name: Customers
    description: |-
      Use these operations to manage customers. A customer is an
      entity that purchases goods or services from you (a merchant),
      and is the payee in any transaction that is credited to you.
      Customers are associated with payment instruments,
      subscriptions, invoices, and other related resources.

      In other systems, customers may be referred to as accounts,
      clients, members, patrons, or players. For information on the
      customer resource, see
      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).
  - name: Customers timeline
    description: >-
      Use customer timelines to maintain an audit trail of changes and
      activity for each customer.
  - name: Orders timeline
    description: >-
      Use order timelines to maintain an audit trail of changes and
      activity for each order.
  - name: Invoices timeline
    description: >-
      Use invoice timelines to maintain an audit trail of changes and
      activity for each invoice.
  - name: Transactions timeline
    description: >-
      Use transaction timelines to maintain an audit trail of changes
      and activity for each transaction.
  - name: Credit memos timeline
    description: >-
      Use credit memo timelines to maintain an audit trail of changes
      and activity for each credit memo. Credit memos are a means of
      providing a customer with store credit.
  - name: Rules timeline
    description: >-
      Use rule timelines to maintain an audit trail of changes and
      activity for each rule.
  - name: Gateway accounts timeline
    description: >-
      Use gateway account timelines to maintain an audit trail of
      changes and activity for each gateway account.
  - name: KYC documents
    description: |-
      Use Know Your Customer (KYC) documents to verify your customers
      identity. The KYC document operations generate a signed link to
      the Rebilly
      [KYC document gatherer](https://www.rebilly.com/docs/kyc-and-aml/kyc-document-gatherer/).

      Document types:
        - `identity-proof`: Validates a customer's identity.
        - `address-proof`: Validates a customer's address.
        - `purchase-proof`: Validates a customer's purchase.
        - `funds-proof`: Validates that a customer has funds.
        - `credit-file-proof`: Verifies that there is an existing
        credit file with two sources that match the customer's name,
        DOB, and address.

      Rebilly parses and analyzes the documents and accepts or
      rejects them according to a configurable scoring algorithm.
      When all document types in a KYC request are accepted,
      the status is fulfilled, and the
      [KYC request fulfilled webhook](https://www.rebilly.com/docs/dev-docs/api/operation/kyc-request-fulfilled/)
      is emitted.

      ### Credit file proof

      The `credit-file-proof` KYC document request type is only
      available in the API, this option is not available in the
      [KYC document gatherer](https://www.rebilly.com/docs/kyc-and-aml/kyc-document-gatherer/).
      This request verifies that there is an existing credit
      file with two sources that match the person's name, date of birth, and
      address.

      In Canada, to meet FINTRAC requirements, the `credit-file-proof`
      KYC document request verifies the customer's name, address,
      and date of birth with a credit agency.

      If `credit-file-proof` is requested in combination with
      `identity-proof` and `address-proof`, `credit-file-proof` is
      attempted first. If `credit-file-proof` validates the identity
      and address, the KYC request is considered fulfilled. If the
      request is not fulfilled, redirect your customer to the KYC
      document gatherer to collect their KYC documents.

  - name: Customer authentication
    description: >-
      Use these operations to validate the identity of users and
      manage authentication credentials.
  - name: Custom fields
    description: |-
      Use custom fields to extend a resource scheme to include custom
      data that is not provided as a common field. Depending on the
      resource on which the custom field is added, it will be
      available in the Rebilly UI.

      Example: A custom field called `preferredCommunicationChannel`
      is added to the customer resource. It has two allowed values,
      which are 'email' and 'phone'.

      ```js
      {
        "customFields": {
            "preferredCommunicationChannel": "email"
        }
      }
      ```

      For detailed information on Rebilly resources, see
      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).
  - name: Disputes
    description: |-
      Use these operations to manage disputes. A dispute occurs when a
      customer contests a charge to their account. The dispute and
      related information is made available to the merchant by the
      bank or credit card company. The merchant then has the option to
      represent the charge and win the case. This process is called
      dispute resolution. If the merchant is unable to represent the
      charge, the card issuer will typically reverse the sale and add
      fees on top of the charge. This process is called a chargeback.
  - name: Files
    description: |-
      Use the file entity to store files and related metadata. Files
      can be sorted by size, MIME-type, user-defined tags, and
      description.

      The following methods are available to upload files:
      multipart/form-data encoded form, RAW POST &mdash; by sending
      the file contents as the POST body, and fetching from URL
      &mdash; by providing the file URL using the 'url' parameter.

      Use the attachments entity to link a file to one or multiple
      objects, such as: customer, dispute, transaction,
      order, plan, product, invoice, or timeline comment. Attachments enable you
      to quickly find and use files related to specific entities.
  - name: Invoices
    description: |-
      Use invoices to bill for the goods or services that you provide.
      If your invoice includes subscription items, it also includes
      the corresponding service periods and prices. For information on
      the invoice resource, see
      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).
  - name: Credit memos
    description: |-
      Use credit memos to provide a customer with store
      credit. A common use case for using a credit memo is to provide
      a customer with store credit, rather than a refund, if the
      customer pays more than they owe or returns a product. For
      information on the credit memo resource, see
      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).
  - name: Payment instruments
    description: |-
      Use these operations to manage payment instruments. Payment
      instrument is a term which describes any means of making
      a digital payment, such as: credit cards, debit cards,
      direct debits, payment service providers, and digital wallets.

      A payment instrument is not a resource. It is a term used to
      describe a specific set of resources, such as payment cards
      and bank accounts. For more information on payment
      instruments, see
      [Payment instruments](https://www.rebilly.com/docs/dev-docs/concepts/#payment-instruments).
  - name: Payment tokens
    description: |-
      Use payment tokens to reduce the scope of
      [PCI DSS compliance](https://www.rebilly.com/docs/pci-compliance/).

      A payment token can be made using a different authentication
      scheme, which enables you to create a payment token directly
      from the browser, and bypasses the need to send
      sensitive cardholder info to your servers. We recommend using
      this with the FramePay library, which helps you set a form
      into this API resource and create payment tokens. For more
      information, see the public key authentication scheme in the 
      Authentication section.
  - name: Products
    description: |-
      Use products to describe the goods and services that your
      business sells. A product also describes sales items on invoices
      and receipts. Product pricing is defined in
      [plans](https://www.rebilly.com/docs/dev-docs/api/tag/Plans/).
      A product may have one or many plans.

      For information on the product resource, see
      [Product](https://www.rebilly.com/docs/dev-docs/concepts/#products).
  - name: Plans
    description: |-
      Use pricing plans to describe how the customer must pay for
      [products](https://www.rebilly.com/docs/dev-docs/api/tag/Products/).

      Rebilly provides the following plan types:

      - Trial only: Use this plan to create and offer a free or
      discounted trial period for your product. For example, a free 2
      week trail of an internet service. After the trial, the customer
      can choose to sign up for a paid subscription, or stop using the
      service.
      - Recurring: Use this plan to create and offer a subscription
      for your product. For example, a monthly subscription to an
      internet service that is charged at 20 USD per month.
      - One time sale: Use this plan to create and offer a one-off
      sale for your products. For example, a one time purchase of two
      bags of coffee.

      For information on the plans resource, see
      [Plans](https://www.rebilly.com/docs/dev-docs/concepts/#plans).

      For information on plan pricing, see
      [Pricing formulas](https://www.rebilly.com/docs/settings/pricing-formulas/).
  - name: Search
    description: >-
      Use search operations to search data on customers, invoices,
      orders, transactions and more.
  - name: Shipping rates
    description: >-
      Use these operations to manage shipping rates. A shipping rate
      contains a filter and a pricing for a specific shipping
      destination.
  - name: Orders
    description: |-
      An order is a customer's request to purchase items. It can
      contain subscription and one-time sale items. When an order
      contains one or more subscription items, it is a subscription
      order.

      An order generates an invoice. A subscription order generates an
      invoice for each service period.
      For more information, see
      [Orders](https://www.rebilly.com/docs/dev-docs/concepts/#orders).
  - name: Tags
    description: >-
      Use tags to organize and categorize customers or KYC documents
      based on keywords.
  - name: Transactions
    description: |-
      Use these operations to set up payment instruments for payments,
      authorize and hold funds, capture funds, make payments, make
      payouts, and refund transactions.
  - name: Fees
    description: |-
      Use fees to reconcile transactions with applicable fees and
      discount rates. Fees are not applied directly to transaction
      amounts, they do not modify the transaction amount. Fees help to
      describe each part of the transaction amount.

      This API is experimental and not guaranteed to be backward
      compatible.
  - name: API keys
    description: |-
      Use API keys to identify and authenticate applications and users.
      Always keep your API keys private. When creating API keys,
      you can restrict them to a given set of permissions.
      For information on how to create and manage API keys,
      see [API keys](https://www.rebilly.com/docs/dev-docs/api-keys/).

      In addition to API keys, you may use JSON Web Tokens (JWT)
      to authenticate to the API. For more information, see
      [JWT session](https://user-api-docs.rebilly.com/#tag/JWT-Session).
  - name: Balance transactions
    description: >-
      Use these operations to view and manage balance
      transactions

      This API is experimental and not guaranteed to be backward
      compatible.
  - name: Billing portals
    description: |-
      Use these operations to create and manage billing portals.
      Rebilly hosted billing portals provide secure, Rebilly hosted
      pages, where customers can: view invoices, cancel subscriptions,
      update payment instruments, and update their address.
  - name: Checkout forms
    description: |-
      Use these operations to create and manage checkout forms.
      Rebilly hosted checkout forms provide secure and compliant
      checkouts. Checkout forms are customizable, and use fully
      responsive design, built-in error messaging, validation, and
      expedited checkout for returning customers.
  - name: Email credentials
    description: >-
      Use these operations to get, create, and manage SMTP credential
      hashes.
  - name: Gateway accounts
    description: |-
      Use these operations to manage payment gateway accounts. A
      payment gateway is a service which enables merchants to
      receive payments from their customers to their merchant account.
      A merchant account is a bank account that enables businesses to
      receive payments. Use payment gateway accounts to connect
      payment requests to third party networks and platforms.
  - name: Lists
    description: |-
      Use lists to create and maintain sets of values that may be
      referenced in rule conditions. Commonly used lists contain
      values related to conditions that target specific properties
      such as: customers, transactions, or BINs.

      You may grant list edit permissions to members of your team
      without enabling them to edit rules. This may be useful if your
      workflow involves frequent updates to value sets that are used
      in rule or bind conditions. List order may not be maintained and
      duplicates may be removed.

      For more information, see
      [Value lists](https://www.rebilly.com/docs/automations/create-a-value-list/#value-lists).
  - name: Organizations
    description: |-
      Use these operations to manage your organizations in Rebilly.
      An organization is an entity that represents you, or your
      company, as a merchant. You can have multiple organizations.
      For more information, see
      [My organizations and websites](https://www.rebilly.com/docs/settings/organizations-and-websites/).

      Note: Organizations are shared between the live and sandbox
      environments.
  - name: Profile
    description: >-
      Use these operations to manage user profiles. A profile
      represents the person that is signed in to Rebilly.
  - name: Reset password
    description: >-
      Use these operations to manage password resets. When a password
      reset is requested, an email with a token is sent. In the email
      the user must click a reset link, and then create a new password.
  - name: Rules
    description: |-
      Use rules to automate. In the Rebilly rules engine, an action
      is an operation that executes when an event occurs. Action and
      event conditions are defined in rules. Rulesets are collections
      of rules that are associated with an event. The order in which
      the rules are placed within a ruleset specifies the execution order.

      For a list of events and related actions, see
      [Events](https://www.rebilly.com/docs/automations/event-types/).
  - name: JWT session
    description: |
      Use these operations to manage JWT sessions. A session contains
      a token, which is a JSON Web Token. The token is created  with a
      user's sign in credentials.

      This token can be used to authenticate to the API. In addition,
      the session can be set to expire at a particular time. Use the
      token to authenticate further requests to the Rebilly API.

      The token must be kept private, but can be stored on the
      user's browser client to simulate a "session".
  - name: Status
    description: >-
      Use this operation to check the status of the Rebilly API. No
      authentication is required.
  - name: Tracking
    description: >-
      Use tracking when debugging and auditing issues. Tracking is a
      layer for accessing all activity such as: API requests,
      subscriptions, webhooks, events, and more.
  - name: Users
    description: >-
      Use these operations to manage users. A user is a person who
      can login to Rebilly, and take actions based on their granted
      permissions.
  - name: Websites
    description: |-
      Use these operations to manage websites. A website is where
      your organization obtains a customer. It is also the processor
      account and billing descriptor used for payment transactions.
      You can create multiple websites.

      Websites are related to each invoice and each payment
      gateway account. This enables you to associate gateway accounts
      with multiple websites, or make them exclusive to particular
      websites. For more information, see
      [My organizations and websites](https://www.rebilly.com/docs/settings/organizations-and-websites/).
  - name: Webhook credentials
    description: >-
      Use these operations to manage webhook credential hashes.
  - name: Webhooks
    description: |-
      Use these operations to manage webhooks. Webhooks notify your
      systems in real-time when certain events occur. For example,
      when a new transaction occurs or a new subscription is created.
      Webhooks enable you to collect information about events. Rebilly
      can send this information by HTTP POST request to a defined URL of
      your choice.
  - name: Segments
    description: |-
      Use these operations to manage UI segments. A segment is a
      filtered view of a data set that can be shared with other users.
      For example, you may create a transactions segment that displays
      specific columns that are filtered and sorted based on certain
      criteria, and share it with others in your organization.
  - name: Memberships
    description: |-
      Use these operations to manage user membership within your
      organizations. Membership describes the relationship between
      organizations and users. For example, one user could be a member
      of more than one organization.
  - name: Roles
    description: |-
      Use these operations to manage user roles within your team or
      organization. Roles are an implementation of the general
      hierarchical (Role Based Access Control) RBAC. A senior role
      inherits all of its juniors' Access Control Lists (ACLs) and its
      own ACL. Junior roles are not influenced by the senior role.
  - name: Integrations
    description: |-
      Use these operations to manage third-party apps that are
      integrated to your Rebilly account. For more information on
      third-party apps, and how to integrate them, see
      [Integrations](https://www.rebilly.com/docs/automations/integrations/).
  - name: Broadcast messages
    description: |-
      Use broadcast messages to notify customers and leads about
      upcoming promotions, service updates, and events.
      Broadcast messages are emails that are sent to a specific group
      of customers, or all customers. For more information, see
      [Create a broadcast message](https://www.rebilly.com/docs/automations/email-notifications/#create-a-broadcast-messages).
  - name: Email delivery settings
    description: |-
      Use email delivery settings to configure from which email
      address notifications and broadcast message are sent. In
      Rebilly, this email address is referred to as a "From address".
      Supported email service providers are: SMTP, Mailgun, SendGrid,
      AWS SES, Postmark, and Rebilly.
  - name: Email messages
    description: >-
      Use email messages to email customers directly.
  - name: Email notifications
    description: |-
      Use email notifications to keep customers
      informed on events, and to inform them of events that may
      require action on their end. Email notifications are targeted
      email messages that can be plain text or HTML.

      Email notifications can also be used to notify teammates about
      new customers, blocklist matches, risk score changes, and more.
      For more information, see
      [Email notifications](https://www.rebilly.com/docs/automations/email-notifications/).
  - name: Plaid credentials
    description: |-
      Use these operations to manage your Plaid account credentials.
      The Plaid integration provides customer bank credential
      verification, and simplifies the process of providing
      credentials for your customers. For more information, see
      [Plaid integration](https://www.rebilly.com/docs/automations/plaid-integration/).
  - name: Experian credentials
    description: |-
      Use these operations to manage your Experian account
      credentials. The Experian integration provides identity
      verification. For more information, see
      [Experian integration](https://www.rebilly.com/docs/automations/experian-integration/#experian-integration).
  - name: TaxJar credentials
    description: |-
      Use these operations to manage your TaxJar account credentials.
      The TaxJar integration enables you to calculate taxes and create
      transactions for the Sales Tax AutoFile feature in your TaxJar
      account. For more information, see
      [TaxJar integration](https://www.rebilly.com/docs/automations/tax-jar-integration/#taxjar-integration).
  - name: Metadata
    description: >-
      Use these operations to retrieve and manage metadata. Metadata
      is structured information on other data.
  - name: Custom domains
    description: |-
      Use custom domains to configure and use your own domain for
      forms and billing portals, instead of the default Rebilly
      domain:`portal.secure-payments.app`. For more information, see
      [Configure a custom domain](https://www.rebilly.com/docs/settings/organizations-and-websites#configure-a-custom-domain).
  - name: Histograms
    description: >-
      Use histograms operations to generate transaction histogram reports
      with cohorts and periods.
  - name: Reports
    description: >-
      Use reports operations to retrieve summary information about
      your customers, subscriptions, transactions, and more.
  - name: Data exports
    description: |-
      Use data export operations to manage the export of resource
      data, such as: transactions, customers, subscriptions, invoices,
      invoice item data, or revenue audit. Common data export use
      cases are: accounting, data analysis, reporting, or importing
      into other databases.

      For detailed information on Rebilly resources, see
      [Resources](https://www.rebilly.com/docs/dev-docs/concepts/#resources).
  - name: Organization data exports
    description: |-
      Use organization data exports to export your organization's data
      which you may want to do as a business continuity practice.
      These may also be used to to export data if you decide to
      migrate to a different payments solution.
  - name: Rebilly API
    description: |-
      The Rebilly API is a collection of the most commonly used
      endpoints and operations. For more information, see the
      [Rebilly API](https://api-reference.rebilly.com).
  - name: Reports API
    description: |-
      The Reports API is a collection of report related
      endpoints and operations. This API is currently experimental.
      For more information, see the
      [Reports API](https://reports-api-docs.rebilly.com).
  - name: Storefront API
    description: |-
      The Storefront API is a collection of customer related
      endpoints and operations. This API is currently experimental.
      For more information, see the
      [Storefront API](https://storefront-api-docs.rebilly.com/).
  - name: Users API
    description: |-
      The Users API is a collection of user and Rebilly UI related 
      endpoints and operations. A user represents a person who can 
      log in to Rebilly, and take actions based on their granted 
      permissions, and role. For more information, see the
      [Rebilly User API](https://user-api-docs.rebilly.com).
  - name: Account
    description: >-
      Use these operations to manage Rebilly accounts. An account in
      which you are subscribed to in order to use the Rebilly product.
  - name: Authentication
    description: >-
      Use these operations to manage the process of confirming the
      identity of users that are attempting to access resources.
  - name: Email verification
    description: >
      Use these operations to manage email verification. Email
      verification is the process of confirming that an email address
      exists and is associated with an individual.
  - name: Password reset
    description: >-
      Use these operations to manage password resets for a user or
      organization.
  - name: Purchases
    description: >-
      Use these operations to manage purchases. Purchases are
      transactions that have been executed related to the purchase of
      goods or services.
  - name: Application owners
    description: |-
      Use these operations to register applications to the Rebilly
      Apps Store and manage application instances. An application
      owner is a person or organization that has submitted an app to
      the Rebilly App Store. For more information, see
      [Submit an app](https://www.rebilly.com/docs/dev-docs/submit-a-rebilly-app/).
  - name: Application users
    description: |-
      Use these operations to install or uninstall apps from the
      Rebilly App Store to your Rebilly account, and to manage
      application instances. An application user is a person or
      organization that uses an app that is installed from the
      Rebilly App Store. For more information, see
      [Install or uninstall an app](https://www.rebilly.com/docs/dev-docs/install-an-app/).

x-tagGroups: []

paths:
  /aml:
    $ref: './paths/aml.yaml'
  /attachments:
    $ref: ./paths/attachments.yaml
  '/attachments/{id}':
    $ref: './paths/attachments@{id}.yaml'
  /authentication-options:
    $ref: ./paths/authentication-options.yaml
  /authentication-tokens:
    $ref: ./paths/authentication-tokens.yaml
  '/authentication-tokens/{token}':
    $ref: './paths/authentication-tokens@{token}.yaml'
  '/authentication-tokens/{token}/exchange':
    $ref: './paths/authentication-tokens@{token}@exchange.yaml'
  /blocklists:
    $ref: ./paths/blocklists.yaml
  '/blocklists/{id}':
    $ref: './paths/blocklists@{id}.yaml'
  /coupons-redemptions:
    $ref: ./paths/coupons-redemptions.yaml
  '/coupons-redemptions/{id}':
    $ref: './paths/coupons-redemptions@{id}.yaml'
  '/coupons-redemptions/{id}/cancel':
    $ref: './paths/coupons-redemptions@{id}@cancel.yaml'
  /coupons:
    $ref: ./paths/coupons.yaml
  '/coupons/{id}':
    $ref: './paths/coupons@{id}.yaml'
  '/coupons/{id}/expiration':
    $ref: './paths/coupons@{id}@expiration.yaml'
  /credentials:
    $ref: ./paths/credentials.yaml
  '/credentials/{id}':
    $ref: './paths/credentials@{id}.yaml'
  '/custom-fields/{resource}':
    $ref: './paths/custom-fields@{resource}.yaml'
  '/custom-fields/{resource}/{name}':
    $ref: './paths/custom-fields@{resource}@{name}.yaml'
  /customers:
    $ref: ./paths/customers.yaml
  '/customers/{id}':
    $ref: './paths/customers@{id}.yaml'
  /customer-timeline-custom-events:
    $ref: ./paths/customer-timeline-custom-events.yaml
  '/customer-timeline-custom-events/{id}':
    $ref: './paths/customer-timeline-custom-events@{id}.yaml'
  '/customers/{id}/aml':
    $ref: './paths/customers@{id}@aml.yaml'
  '/customers/{id}/lead-source':
    $ref: './paths/customers@{id}@lead-source.yaml'
  '/customers/{id}/timeline':
    $ref: './paths/customers@{id}@timeline.yaml'
  '/customers/{id}/timeline/{messageId}':
    $ref: './paths/customers@{id}@timeline@{messageId}.yaml'
  /disputes:
    $ref: ./paths/disputes.yaml
  '/disputes/{id}':
    $ref: './paths/disputes@{id}.yaml'
  /files:
    $ref: ./paths/files.yaml
  '/files/{id}':
    $ref: './paths/files@{id}.yaml'
  '/files/{id}/download':
    $ref: './paths/files@{id}@download.yaml'
  '/application-instances/{applicationId}':
    $ref: './paths/application-instances@{applicationId}.yaml'
  '/applications':
    $ref: './paths/applications.yaml'
  '/applications/{id}':
    $ref: './paths/applications@{id}.yaml'
  '/applications/{id}/instances':
    $ref: './paths/applications@{id}@instances.yaml'
  '/applications/{id}/instances/{organizationId}':
    $ref: './paths/applications@{id}@instances@{organizationId}.yaml'
  /invoices:
    $ref: ./paths/invoices.yaml
  '/invoices/{id}':
    $ref: './paths/invoices@{id}.yaml'
  '/invoices/{id}/items':
    $ref: './paths/invoices@{id}@items.yaml'
  '/invoices/{id}/items/{itemId}':
    $ref: './paths/invoices@{id}@items@{itemId}.yaml'
  '/invoices/{id}/issue':
    $ref: './paths/invoices@{id}@issue.yaml'
  '/invoices/{id}/abandon':
    $ref: './paths/invoices@{id}@abandon.yaml'
  '/invoices/{id}/void':
    $ref: './paths/invoices@{id}@void.yaml'
  '/invoices/{id}/recalculate':
    $ref: './paths/invoices@{id}@recalculate.yaml'
  '/invoices/{id}/reissue':
    $ref: './paths/invoices@{id}@reissue.yaml'
  '/invoices/{id}/transaction-allocations':
    $ref: './paths/invoices@{id}@transaction-allocations.yaml'
  '/invoices/{id}/transaction':
    $ref: './paths/invoices@{id}@transaction.yaml'
  '/customers/{id}/upcoming-invoices':
    $ref: './paths/customers@{id}@upcoming-invoices.yaml'
  '/invoices/{id}/timeline':
    $ref: './paths/invoices@{id}@timeline.yaml'
  '/invoices/{id}/timeline/{messageId}':
    $ref: './paths/invoices@{id}@timeline@{messageId}.yaml'
  /credit-memos:
    $ref: ./paths/credit-memos.yaml
  /credit-memos/{id}:
    $ref: ./paths/credit-memos@{id}.yaml
  /credit-memos/{id}/void:
    $ref: ./paths/credit-memos@{id}@void.yaml
  /credit-memos/{id}/timeline:
    $ref: ./paths/credit-memos@{id}@timeline.yaml
  /credit-memos/{id}/timeline/{messageId}:
    $ref: ./paths/credit-memos@{id}@timeline@{messageId}.yaml
  /invoices/{id}/credit-memo-allocations:
    $ref: ./paths/invoices@{id}@credit-memo-allocations.yaml
  /invoices/{id}/credit-memo-allocations/{creditMemoId}:
    $ref: ./paths/invoices@{id}@credit-memo-allocations@{creditMemoId}.yaml
  /kyc-requests:
    $ref: ./paths/kyc-requests.yaml
  '/kyc-requests/{id}':
    $ref: './paths/kyc-requests@{id}.yaml'
  /kyc-documents:
    $ref: ./paths/kyc-documents.yaml
  '/kyc-documents/{id}':
    $ref: './paths/kyc-documents@{id}.yaml'
  '/kyc-documents/{id}/acceptance':
    $ref: './paths/kyc-documents@{id}@acceptance.yaml'
  '/kyc-documents/{id}/matches':
    $ref: './paths/kyc-documents@{id}@matches.yaml'
  '/kyc-documents/{id}/rejection':
    $ref: './paths/kyc-documents@{id}@rejection.yaml'
  '/kyc-documents/{id}/review':
    $ref: './paths/kyc-documents@{id}@review.yaml'
  '/kyc-documents/{id}/start-review':
    $ref: './paths/kyc-documents@{id}@start-review.yaml'
  '/kyc-documents/{id}/stop-review':
    $ref: './paths/kyc-documents@{id}@stop-review.yaml'
  /kyc-settings:
    $ref: ./paths/kyc-settings.yaml
  /password-tokens:
    $ref: ./paths/password-tokens.yaml
  '/password-tokens/{id}':
    $ref: './paths/password-tokens@{id}.yaml'
  '/payment-instruments':
    $ref: './paths/payment-instruments.yaml'
  '/payment-instruments/{id}':
    $ref: './paths/payment-instruments@{id}.yaml'
  '/payment-instruments/{id}/deactivation':
    $ref: './paths/payment-instruments@{id}@deactivation.yaml'
  /plans:
    $ref: ./paths/plans.yaml
  '/plans/{id}':
    $ref: './paths/plans@{id}.yaml'
  /products:
    $ref: ./paths/products.yaml
  '/products/{id}':
    $ref: './paths/products@{id}.yaml'
  '/ready-to-pay':
    $ref: ./paths/ready-to-pay.yaml
  /search:
    $ref: ./paths/search.yaml
  /shipping-rates:
    $ref: ./paths/shipping-rates.yaml
  '/shipping-rates/{id}':
    $ref: './paths/shipping-rates@{id}.yaml'
  /subscriptions:
    $ref: ./paths/subscriptions.yaml
  '/subscriptions/{id}':
    $ref: './paths/subscriptions@{id}.yaml'
  '/subscriptions/{id}/void':
    $ref: './paths/subscriptions@{id}@void.yaml'
  '/subscriptions/{id}/change-items':
    $ref: './paths/subscriptions@{id}@change-items.yaml'
  '/subscriptions/{id}/interim-invoice':
    $ref: './paths/subscriptions@{id}@interim-invoice.yaml'
  /subscription-pauses:
    $ref: ./paths/subscription-pauses.yaml
  '/subscription-pauses/{id}':
    $ref: './paths/subscription-pauses@{id}.yaml'
  /subscription-cancellations:
    $ref: ./paths/subscription-cancellations.yaml
  '/subscription-cancellations/{id}':
    $ref: './paths/subscription-cancellations@{id}.yaml'
  /subscription-reactivations:
    $ref: ./paths/subscription-reactivations.yaml
  '/subscription-reactivations/{id}':
    $ref: './paths/subscription-reactivations@{id}.yaml'
  '/subscriptions/{id}/upcoming-invoices':
    $ref: './paths/subscriptions@{id}@upcoming-invoices.yaml'
  '/subscriptions/{id}/upcoming-invoices/{invoiceId}/issue':
    $ref: './paths/subscriptions@{id}@upcoming-invoices@{invoiceId}@issue.yaml'
  '/subscriptions/{id}/timeline':
    $ref: './paths/subscriptions@{id}@timeline.yaml'
  '/subscriptions/{id}/timeline/{messageId}':
    $ref: './paths/subscriptions@{id}@timeline@{messageId}.yaml'
  /tags:
    $ref: ./paths/tags.yaml
  '/tags/{tag}':
    $ref: './paths/tags@{tag}.yaml'
  '/tags/{tag}/customers':
    $ref: './paths/tags@{tag}@customers.yaml'
  '/tags/{tag}/customers/{customerId}':
    $ref: './paths/tags@{tag}@customers@{customerId}.yaml'
  '/tags/{tag}/kyc-documents':
    $ref: './paths/tags@{tag}@kyc-documents.yaml'
  '/tags/{tag}/kyc-documents/{kycDocumentId}':
    $ref: './paths/tags@{tag}@kyc-documents@{kycDocumentId}.yaml'
  /tokens:
    $ref: ./paths/tokens.yaml
  '/tokens/{token}':
    $ref: './paths/tokens@{token}.yaml'
  /digital-wallets/validation:
    $ref: './paths/digital-wallets@validation.yaml'
  /transactions:
    $ref: ./paths/transactions.yaml
  '/transactions/{id}':
    $ref: './paths/transactions@{id}.yaml'
  /payouts:
    $ref: ./paths/payouts.yaml
  '/transactions/{id}/query':
    $ref: './paths/transactions@{id}@query.yaml'
  '/transactions/{id}/update':
    $ref: './paths/transactions@{id}@update.yaml'
  '/transactions/{id}/refund':
    $ref: './paths/transactions@{id}@refund.yaml'
  '/transactions/{id}/timeline':
    $ref: './paths/transactions@{id}@timeline.yaml'
  '/transactions/{id}/timeline/{messageId}':
    $ref: './paths/transactions@{id}@timeline@{messageId}.yaml'
  '/fees':
    $ref: './paths/fees.yaml'
  '/fees/{id}':
    $ref: './paths/fees@{id}.yaml'
  '/activation/{token}':
    $ref: './paths/activation@{token}.yaml'
  /api-keys:
    $ref: ./paths/api-keys.yaml
  '/api-keys/{id}':
    $ref: './paths/api-keys@{id}.yaml'
  /balance-transactions:
    $ref: './paths/balance-transactions.yaml'
  '/balance-transactions/{id}':
    $ref: './paths/balance-transactions@{id}.yaml'
  /billing-portals:
    $ref: ./paths/billing-portals.yaml
  /billing-portals/{id}:
    $ref: './paths/billing-portals@{id}.yaml'
  /broadcast-messages:
    $ref: ./paths/broadcast-messages.yaml
  '/broadcast-messages/{id}':
    $ref: './paths/broadcast-messages@{id}.yaml'
  /checkout-forms:
    $ref: ./paths/checkout-forms.yaml
  /checkout-forms/{id}:
    $ref: './paths/checkout-forms@{id}.yaml'
  /credential-hashes/aws-ses:
    $ref: ./paths/credential-hashes@aws-ses.yaml
  '/credential-hashes/aws-ses/{hash}':
    $ref: './paths/credential-hashes@aws-ses@{hash}.yaml'
  /credential-hashes/emails:
    $ref: ./paths/credential-hashes@emails.yaml
  '/credential-hashes/emails/{hash}':
    $ref: './paths/credential-hashes@emails@{hash}.yaml'
  /credential-hashes/mailgun:
    $ref: ./paths/credential-hashes@mailgun.yaml
  '/credential-hashes/mailgun/{hash}':
    $ref: './paths/credential-hashes@mailgun@{hash}.yaml'
  /credential-hashes/oauth2:
    $ref: ./paths/credential-hashes@oauth2.yaml
  '/credential-hashes/oauth2/{hash}':
    $ref: './paths/credential-hashes@oauth2@{hash}.yaml'
  '/credential-hashes/oauth2/{hash}/items':
    $ref: './paths/credential-hashes@oauth2@{hash}@items.yaml'
  /credential-hashes/plaid:
    $ref: './paths/credential-hashes@plaid.yaml'
  '/credential-hashes/plaid/{hash}':
    $ref: './paths/credential-hashes@plaid@{hash}.yaml'
  /credential-hashes/postmark:
    $ref: ./paths/credential-hashes@postmark.yaml
  '/credential-hashes/postmark/{hash}':
    $ref: './paths/credential-hashes@postmark@{hash}.yaml'
  /credential-hashes/sendgrid:
    $ref: ./paths/credential-hashes@sendgrid.yaml
  '/credential-hashes/sendgrid/{hash}':
    $ref: './paths/credential-hashes@sendgrid@{hash}.yaml'
  /credential-hashes/webhooks:
    $ref: ./paths/credential-hashes@webhooks.yaml
  '/credential-hashes/webhooks/{hash}':
    $ref: './paths/credential-hashes@webhooks@{hash}.yaml'
  /credential-hashes/experian:
    $ref: ./paths/credential-hashes@experian.yaml
  '/credential-hashes/experian/{hash}':
    $ref: './paths/credential-hashes@experian@{hash}.yaml'
  /credential-hashes/taxjar:
    $ref: ./paths/credential-hashes@taxjar.yaml
  '/credential-hashes/taxjar/{hash}':
    $ref: './paths/credential-hashes@taxjar@{hash}.yaml'
  /custom-domains:
    $ref: ./paths/custom-domains.yaml
  '/custom-domains/{domain}':
    $ref: './paths/custom-domains@{domain}.yaml'
  '/email-delivery-setting-verifications/{token}':
    $ref: './paths/email-delivery-setting-verifications@{token}.yaml'
  /email-delivery-settings:
    $ref: ./paths/email-delivery-settings.yaml
  '/email-delivery-settings/{id}':
    $ref: './paths/email-delivery-settings@{id}.yaml'
  '/email-delivery-settings/{id}/resend-email-verification':
    $ref: './paths/email-delivery-settings@{id}@resend-email-verification.yaml'
  /email-messages:
    $ref: ./paths/email-messages.yaml
  '/email-messages/{id}':
    $ref: './paths/email-messages@{id}.yaml'
  /email-notifications:
    $ref: ./paths/email-notifications.yaml
  /events:
    $ref: ./paths/events.yaml
  '/events/{eventType}':
    $ref: './paths/events@{eventType}.yaml'
  '/events/{eventType}/rules':
    $ref: './paths/events@{eventType}@rules.yaml'
  '/events/{eventType}/timeline':
    $ref: './paths/events@{eventType}@timeline.yaml'
  '/events/{eventType}/timeline/{messageId}':
    $ref: './paths/events@{eventType}@timeline@{messageId}.yaml'
  '/events/{eventType}/rules/history':
    $ref: './paths/events@{eventType}@rules@history.yaml'
  '/events/{eventType}/rules/history/{version}':
    $ref: './paths/events@{eventType}@rules@history@{version}.yaml'
  '/events/{eventType}/rules/versions/{version}':
    $ref: './paths/events@{eventType}@rules@versions@{version}.yaml'
  '/events/{eventType}/rules/drafts':
    $ref: './paths/events@{eventType}@rules@drafts.yaml'
  '/events/{eventType}/rules/drafts/{id}':
    $ref: './paths/events@{eventType}@rules@drafts@{id}.yaml'
  /forgot-password:
    $ref: ./paths/forgot-password.yaml
  /gateway-accounts:
    $ref: ./paths/gateway-accounts.yaml
  '/gateway-accounts/{id}':
    $ref: './paths/gateway-accounts@{id}.yaml'
  '/gateway-accounts/{id}/close':
    $ref: './paths/gateway-accounts@{id}@close.yaml'
  '/gateway-accounts/{id}/disable':
    $ref: './paths/gateway-accounts@{id}@disable.yaml'
  '/gateway-accounts/{id}/downtime-schedules':
    $ref: './paths/gateway-accounts@{id}@downtime-schedules.yaml'
  '/gateway-accounts/{id}/downtime-schedules/{downtimeId}':
    $ref: './paths/gateway-accounts@{id}@downtime-schedules@{downtimeId}.yaml'
  '/gateway-accounts/{id}/enable':
    $ref: './paths/gateway-accounts@{id}@enable.yaml'
  '/gateway-accounts/{id}/limits':
    $ref: './paths/gateway-accounts@{id}@limits.yaml'
  '/gateway-accounts/{id}/limits/{limitId}':
    $ref: './paths/gateway-accounts@{id}@limits@{limitId}.yaml'
  '/gateway-accounts/{id}/timeline':
    $ref: './paths/gateway-accounts@{id}@timeline.yaml'
  '/gateway-accounts/{id}/timeline/{messageId}':
    $ref: './paths/gateway-accounts@{id}@timeline@{messageId}.yaml'
  '/gateway-accounts/{id}/check-credentials':
    $ref: './paths/gateway-accounts@{id}@check-credentials.yaml'
  '/gateway-accounts/{id}/financial-settings':
    $ref: './paths/gateway-accounts@{id}@financial-settings.yaml'
  /digital-wallets/onboarding/apple-pay:
    $ref: './paths/digital-wallets@onboarding@apple-pay.yaml'
  /grid-segments:
    $ref: ./paths/grid-segments.yaml
  '/grid-segments/{id}':
    $ref: './paths/grid-segments@{id}.yaml'
  /integrations:
    $ref: ./paths/integrations.yaml
  '/integrations/{label}':
    $ref: './paths/integrations@{label}.yaml'
  /lists:
    $ref: ./paths/lists.yaml
  '/lists/{id}':
    $ref: './paths/lists@{id}.yaml'
  '/lists/{id}/{version}':
    $ref: './paths/lists@{id}@{version}.yaml'
  /logout:
    $ref: ./paths/logout.yaml
  /memberships:
    $ref: ./paths/memberships.yaml
  '/memberships/{organizationId}/{userId}':
    $ref: './paths/memberships@{organizationId}@{userId}.yaml'
  /organizations:
    $ref: ./paths/organizations.yaml
  '/organizations/{id}':
    $ref: './paths/organizations@{id}.yaml'
  /payment-cards-bank-names:
    $ref: ./paths/payment-cards-bank-names.yaml
  /payment-methods:
    $ref: ./paths/payment-methods.yaml
  /payment-methods/{apiName}:
    $ref: './paths/payment-methods@{apiName}.yaml'
  /payment-gateways-metadata:
    $ref: ./paths/payment-gateways-metadata.yaml
  /payment-gateways-metadata/{apiName}:
    $ref: './paths/payment-gateways-metadata@{apiName}.yaml'
  /permissions-emulation:
    $ref: ./paths/permissions-emulation.yaml
  /previews/orders:
    $ref: ./paths/previews@orders.yaml
  /previews/rule-actions/send-email:
    $ref: ./paths/previews@rule-actions@send-email.yaml
  /previews/rule-actions/trigger-webhook:
    $ref: ./paths/previews@rule-actions@trigger-webhook.yaml
  /previews/webhooks:
    $ref: ./paths/previews@webhooks.yaml
  /profile:
    $ref: ./paths/profile.yaml
  /profile/mfa:
    $ref: ./paths/profile@mfa.yaml
  /profile/password:
    $ref: ./paths/profile@password.yaml
  /profile/totp-reset:
    $ref: ./paths/profile@totp-reset.yaml
  '/reset-password/{token}':
    $ref: './paths/reset-password@{token}.yaml'
  '/roles':
    $ref: ./paths/roles.yaml
  '/roles/{id}':
    $ref: './paths/roles@{id}.yaml'
  '/send-through-attribution/{eventType}':
    $ref: './paths/send-through-attribution@{eventType}.yaml'
  /signin:
    $ref: ./paths/signin.yaml
  /signup:
    $ref: ./paths/signup.yaml
  /status:
    $ref: ./paths/status.yaml
  /tracking/api:
    $ref: ./paths/tracking@api.yaml
  '/tracking/api/{id}':
    $ref: './paths/tracking@api@{id}.yaml'
  /tracking/lists:
    $ref: ./paths/tracking@lists.yaml
  /tracking/webhooks:
    $ref: ./paths/tracking@webhooks.yaml
  '/tracking/webhooks/{id}':
    $ref: './paths/tracking@webhooks@{id}.yaml'
  '/tracking/webhooks/{id}/resend':
    $ref: './paths/tracking@webhooks@{id}@resend.yaml'
  /users:
    $ref: ./paths/users.yaml
  '/users/{id}':
    $ref: './paths/users@{id}.yaml'
  '/users/{id}/mfa':
    $ref: './paths/users@{id}@mfa.yaml'
  '/users/{id}/password':
    $ref: './paths/users@{id}@password.yaml'
  '/users/{id}/totp-reset':
    $ref: './paths/users@{id}@totp-reset.yaml'
  /webhooks:
    $ref: ./paths/webhooks.yaml
  '/webhooks/{id}':
    $ref: './paths/webhooks@{id}.yaml'
  /websites:
    $ref: ./paths/websites.yaml
  '/websites/{id}':
    $ref: './paths/websites@{id}.yaml'
  '/experimental/customers/{customerId}/summary-metrics':
    $ref: './paths/customers@{customerId}@summary-metrics.yaml'
  /experimental/data-exports:
    $ref: ./paths/data-exports.yaml
  '/experimental/data-exports/{id}':
    $ref: './paths/data-exports@{id}.yaml'
  /organization-exports:
    $ref: ./paths/organization-exports.yaml
  '/organization-exports/{id}':
    $ref: './paths/organization-exports@{id}.yaml'
  /experimental/histograms/transactions:
    $ref: ./paths/histograms@transactions.yaml
  /experimental/reports/api-log-summary:
    $ref: ./paths/reports@api-log-summary.yaml
  /experimental/reports/cumulative-subscriptions:
    $ref: ./paths/reports@cumulative-subscriptions.yaml
  /experimental/reports/dashboard:
    $ref: ./paths/reports@dashboard.yaml
  /experimental/reports/dcc-markup:
    $ref: ./paths/reports@dcc-markup.yaml
  /experimental/reports/disputes:
    $ref: ./paths/reports@disputes.yaml
  /experimental/reports/events-triggered:
    $ref: ./paths/reports@events-triggered.yaml
  '/experimental/reports/events-triggered/{eventType}/rules':
    $ref: ./paths/reports@events-triggered@{eventType}@rules.yaml
  /experimental/reports/future-renewals:
    $ref: ./paths/reports@future-renewals.yaml
  /experimental/reports/journal:
    $ref: ./paths/reports@journal.yaml
  /experimental/reports/kyc-acceptance-summary:
    $ref: ./paths/reports@kyc-acceptance-summary.yaml
  /experimental/reports/kyc-rejection-summary:
    $ref: ./paths/reports@kyc-rejection-summary.yaml
  /experimental/reports/kyc-request-summary:
    $ref: ./paths/reports@kyc-request-summary.yaml
  /experimental/reports/monthly-recurring-revenue:
    $ref: ./paths/reports@monthly-recurring-revenue.yaml
  /experimental/reports/renewal-sales:
    $ref: ./paths/reports@renewal-sales.yaml
  /experimental/reports/retention-percentage:
    $ref: ./paths/reports@retention-percentage.yaml
  /experimental/reports/retention-value:
    $ref: ./paths/reports@retention-value.yaml
  /experimental/reports/revenue-waterfall:
    $ref: ./paths/reports@revenue-waterfall.yaml
  /experimental/reports/revenue-audit:
    $ref: ./paths/reports@revenue-audit.yaml
  /experimental/reports/subscription-cancellation:
    $ref: ./paths/reports@subscription-cancellation.yaml
  /experimental/reports/subscription-renewal:
    $ref: ./paths/reports@subscription-renewal.yaml
  /experimental/reports/time-series-transaction:
    $ref: ./paths/reports@time-series-transaction.yaml
  /experimental/reports/transactions-time-dispute:
    $ref: ./paths/reports@transactions-time-dispute.yaml
  /experimental/reports/transactions:
    $ref: ./paths/reports@transactions.yaml
  '/experimental/subscriptions/{subscriptionId}/summary-metrics':
    $ref: ./paths/subscriptions@{subscriptionId}@summary-metrics.yaml
  '/storefront/account':
    $ref: ./paths/storefront/account.yaml
  '/storefront/account/forgot-password':
    $ref: paths/storefront/account@forgot-password.yaml
  '/storefront/account/password':
    $ref: paths/storefront/account@password.yaml
  '/storefront/account/resend-verification':
    $ref: paths/storefront/account@resend-verification.yaml
  '/storefront/account/reset-password/{token}':
    $ref: paths/storefront/account@reset-password@{token}.yaml
  '/storefront/account/verification/{token}':
    $ref: paths/storefront/account@verification@{token}.yaml
  '/storefront/billing-portals/{slug}':
    $ref: paths/storefront/billing-portals@{slug}.yaml
  '/storefront/checkout-forms/{id}':
    $ref: paths/storefront/checkout-forms@{id}.yaml
  '/storefront/invoices':
    $ref: paths/storefront/invoices.yaml
  '/storefront/invoices/{id}':
    $ref: paths/storefront/invoices@{id}.yaml
  '/storefront/kyc-documents':
    $ref: paths/storefront/kyc-documents.yaml
  '/storefront/kyc-documents/{id}':
    $ref: paths/storefront/kyc-documents@{id}.yaml
  '/storefront/kyc-requests/{id}':
    $ref: paths/storefront/kyc-requests@{id}.yaml
  '/storefront/login':
    $ref: paths/storefront/login.yaml
  '/storefront/logout':
    $ref: paths/storefront/logout.yaml
  '/storefront/orders':
    $ref: paths/storefront/orders.yaml
  '/storefront/orders/{id}':
    $ref: paths/storefront/orders@{id}.yaml
  '/storefront/orders/{id}/cancellation':
    $ref: paths/storefront/orders@{id}@cancellation.yaml
  '/storefront/payment':
    $ref: paths/storefront/payment.yaml
  '/storefront/payment-instruments':
    $ref: paths/storefront/payment-instruments.yaml
  '/storefront/payment-instruments/{id}':
    $ref: paths/storefront/payment-instruments@{id}.yaml
  '/storefront/payment-instruments/{id}/deactivation':
    $ref: paths/storefront/payment-instruments@{id}@deactivation.yaml
  '/storefront/payment-instruments/{id}/setup':
    $ref: paths/storefront/payment-instruments@{id}@setup.yaml
  '/storefront/plans':
    $ref: paths/storefront/plans.yaml
  '/storefront/plans/{id}':
    $ref: paths/storefront/plans@{id}.yaml
  '/storefront/products':
    $ref: paths/storefront/products.yaml
  '/storefront/products/{id}':
    $ref: paths/storefront/products@{id}.yaml
  '/storefront/purchase':
    $ref: paths/storefront/purchase.yaml
  '/storefront/preview-purchase':
    $ref: paths/storefront/preview-purchase.yaml
  '/storefront/ready-to-pay':
    $ref: paths/storefront/ready-to-pay.yaml
  '/storefront/register':
    $ref: paths/storefront/register.yaml
  '/storefront/transactions':
    $ref: paths/storefront/transactions.yaml
  '/storefront/transactions/{id}':
    $ref: paths/storefront/transactions@{id}.yaml
  '/storefront/websites/{id}':
    $ref: paths/storefront/websites@{id}.yaml
  '/customers/{id}/edd-score':
    $ref: paths/customers@{id}@edd-score.yaml
  '/customers/{id}/edd-timeline':
    $ref: paths/customers@{id}@edd-timeline.yaml
  '/customers/{id}/edd-search-results':
    $ref: paths/customers@{id}@edd-search-results.yaml

x-webhooks:
  application-instance-disabled:
    post:
      $ref: ./webhooks/application-instance-disabled.yaml
  application-instance-enabled:
    post:
      $ref: ./webhooks/application-instance-enabled.yaml
  aml-list-possibly-matched:
    post:
      $ref: ./webhooks/aml-list-possibly-matched.yaml
  balance-transaction-settled:
    post:
      $ref: ./webhooks/balance-transaction-settled.yaml
  credit-memo-applied:
    post:
      $ref: ./webhooks/credit-memo-applied.yaml
  credit-memo-created:
    post:
      $ref: ./webhooks/credit-memo-created.yaml
  credit-memo-modified:
    post:
      $ref: ./webhooks/credit-memo-modified.yaml
  credit-memo-partially-applied:
    post:
      $ref: ./webhooks/credit-memo-partially-applied.yaml
  credit-memo-voided:
    post:
      $ref: ./webhooks/credit-memo-voided.yaml
  customer-created:
    post:
      $ref: ./webhooks/customer-created.yaml
  customer-merged:
    post:
      $ref: ./webhooks/customer-merged.yaml
  customer-one-time-password-requested:
    post:
      $ref: ./webhooks/customer-one-time-password-requested.yaml
  customer-redirected-offsite:
    post:
      $ref: ./webhooks/customer-redirected-offsite.yaml
  customer-returned:
    post:
      $ref: ./webhooks/customer-returned.yaml
  customer-updated:
    post:
      $ref: ./webhooks/customer-updated.yaml
  dispute-created:
    post:
      $ref: ./webhooks/dispute-created.yaml
  dispute-modified:
    post:
      $ref: ./webhooks/dispute-modified.yaml
  experian-check-performed:
    post:
      $ref: ./webhooks/experian-check-performed.yaml
  invoice-tax-calculation-failed:
    post:
      $ref: ./webhooks/invoice-tax-calculation-failed.yaml
  gateway-account-downtime-ended:
    post:
      $ref: ./webhooks/gateway-account-downtime-ended.yaml
  gateway-account-downtime-started:
    post:
      $ref: ./webhooks/gateway-account-downtime-started.yaml
  gateway-account-limit-reached:
    post:
      $ref: ./webhooks/gateway-account-limit-reached.yaml
  gateway-account-requested:
    post:
      $ref: ./webhooks/gateway-account-requested.yaml
  invoice-abandoned:
    post:
      $ref: ./webhooks/invoice-abandoned.yaml
  invoice-created:
    post:
      $ref: ./webhooks/invoice-created.yaml
  invoice-issued:
    post:
      $ref: ./webhooks/invoice-issued.yaml
  invoice-modified:
    post:
      $ref: ./webhooks/invoice-modified.yaml
  invoice-paid:
    post:
      $ref: ./webhooks/invoice-paid.yaml
  invoice-partially-paid:
    post:
      $ref: ./webhooks/invoice-partially-paid.yaml
  invoice-refunded:
    post:
      $ref: ./webhooks/invoice-refunded.yaml
  invoice-partially-refunded:
    post:
      $ref: ./webhooks/invoice-partially-refunded.yaml
  invoice-past-due:
    post:
      $ref: ./webhooks/invoice-past-due.yaml
  invoice-past-due-reminder:
    post:
      $ref: ./webhooks/invoice-past-due-reminder.yaml
  invoice-reissued:
    post:
      $ref: ./webhooks/invoice-reissued.yaml
  invoice-voided:
    post:
      $ref: ./webhooks/invoice-voided.yaml
  kyc-document-accepted:
    post:
      $ref: ./webhooks/kyc-document-accepted.yaml
  kyc-document-modified:
    post:
      $ref: ./webhooks/kyc-document-modified.yaml
  kyc-document-rejected:
    post:
      $ref: ./webhooks/kyc-document-rejected.yaml
  kyc-document-reviewed:
    post:
      $ref: ./webhooks/kyc-document-reviewed.yaml
  kyc-document-archived:
    post:
      $ref: ./webhooks/kyc-document-archived.yaml
  kyc-request-attempted:
    post:
      $ref: ./webhooks/kyc-request-attempted.yaml
  kyc-request-failed:
    post:
      $ref: ./webhooks/kyc-request-failed.yaml
  kyc-request-fulfilled:
    post:
      $ref: ./webhooks/kyc-request-fulfilled.yaml
  kyc-request-partially-fulfilled:
    post:
      $ref: ./webhooks/kyc-request-partially-fulfilled.yaml
  nsf-response-received:
    post:
      $ref: ./webhooks/nsf-response-received.yaml
  offsite-payment-completed:
    post:
      $ref: ./webhooks/offsite-payment-completed.yaml
  order-completed:
    post:
      $ref: ./webhooks/order-completed.yaml
  payment-card-created:
    post:
      $ref: ./webhooks/payment-card-created.yaml
  payment-card-expiration-reminder:
    post:
      $ref: ./webhooks/payment-card-expiration-reminder.yaml
  payment-card-expired:
    post:
      $ref: ./webhooks/payment-card-expired.yaml
  renewal-invoice-issued:
    post:
      $ref: ./webhooks/renewal-invoice-issued.yaml
  renewal-invoice-payment-canceled:
    post:
      $ref: ./webhooks/renewal-invoice-payment-canceled.yaml
  renewal-invoice-payment-declined:
    post:
      $ref: ./webhooks/renewal-invoice-payment-declined.yaml
  risk-score-changed:
    post:
      $ref: ./webhooks/risk-score-changed.yaml
  subscription-activated:
    post:
      $ref: ./webhooks/subscription-activated.yaml
  subscription-canceled:
    post:
      $ref: ./webhooks/subscription-canceled.yaml
  subscription-downgraded:
    post:
      $ref: ./webhooks/subscription-downgraded.yaml
  subscription-modified:
    post:
      $ref: ./webhooks/subscription-modified.yaml
  subscription-reactivated:
    post:
      $ref: ./webhooks/subscription-reactivated.yaml
  subscription-renewal-reminder:
    post:
      $ref: ./webhooks/subscription-renewal-reminder.yaml
  subscription-renewed:
    post:
      $ref: ./webhooks/subscription-renewed.yaml
  subscription-trial-converted:
    post:
      $ref: ./webhooks/subscription-trial-converted.yaml
  subscription-trial-end-reminder:
    post:
      $ref: ./webhooks/subscription-trial-end-reminder.yaml
  subscription-trial-ended:
    post:
      $ref: ./webhooks/subscription-trial-ended.yaml
  subscription-trial-end-changed:
    post:
      $ref: ./webhooks/subscription-trial-end-changed.yaml
  subscription-upgraded:
    post:
      $ref: ./webhooks/subscription-upgraded.yaml
  subscription-paused:
    post:
      $ref: ./webhooks/subscription-paused.yaml
  subscription-pause-created:
    post:
      $ref: ./webhooks/subscription-pause-created.yaml
  subscription-pause-modified:
    post:
      $ref: ./webhooks/subscription-pause-modified.yaml
  subscription-pause-revoked:
    post:
      $ref: ./webhooks/subscription-pause-revoked.yaml
  subscription-resumed:
    post:
      $ref: ./webhooks/subscription-resumed.yaml
  transaction-amount-discrepancy-found:
    post:
      $ref: ./webhooks/transaction-amount-discrepancy-found.yaml
  transaction-declined:
    post:
      $ref: ./webhooks/transaction-declined.yaml
  transaction-discrepancy-found:
    post:
      $ref: ./webhooks/transaction-discrepancy-found.yaml
  transaction-process-requested:
    post:
      $ref: ./webhooks/transaction-process-requested.yaml
  transaction-processed:
    post:
      $ref: ./webhooks/transaction-processed.yaml
  transaction-timeout-resolved:
    post:
      $ref: ./webhooks/transaction-timeout-resolved.yaml
  waiting-gateway-transaction-completed:
    post:
      $ref: ./webhooks/waiting-gateway-transaction-completed.yaml
