parameters:
  - $ref: ../components/parameters/organizationId.yaml
get:
  tags:
    - Customers
  summary: Retrieve a list of customers
  operationId: GetCustomerCollection
  description: |
    Retrieve a list of customers
  parameters:
    - $ref: ../components/parameters/collectionLimit.yaml
    - $ref: ../components/parameters/collectionOffset.yaml
    - $ref: ../components/parameters/collectionFilter.yaml
    - $ref: ../components/parameters/collectionQuery.yaml
    - $ref: ../components/parameters/collectionExpand.yaml
    - $ref: ../components/parameters/collectionFields.yaml
    - x-rebillyMerge:
        - $ref: ../components/parameters/collectionSort.yaml
        - schema:
            items:
              x-sortableEnum:
                - id
                - email
                - averageValue
                - paymentCount
                - lastPaymentTime
                - lifetimeRevenue
                - invoiceCount
                - createdTime
                - updatedTime
    - x-rebillyMerge:
        - $ref: ../components/parameters/mediaType.yaml
        - schema:
            enum:
              - application/json
              - text/csv
  responses:
    '200':
      description: A list of Customers was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: ../components/headers/Rate-Limit-Limit.yaml
        Rate-Limit-Remaining:
          $ref: ../components/headers/Rate-Limit-Remaining.yaml
        Rate-Limit-Reset:
          $ref: ../components/headers/Rate-Limit-Reset.yaml
        Pagination-Total:
          $ref: ../components/headers/Pagination-Total.yaml
        Pagination-Limit:
          $ref: ../components/headers/Pagination-Limit.yaml
        Pagination-Offset:
          $ref: ../components/headers/Pagination-Offset.yaml
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/Customer.yaml
        text/csv:
          schema:
            type: array
            items:
              $ref: ../components/schemas/Customer.yaml
    '401':
      $ref: ../components/responses/Unauthorized.yaml
  x-code-samples:
    - lang: PHP
      source:
        $ref: ../code_samples/PHP/customers/get.php
post:
  tags:
    - Customers
  summary: Create a customer (without an ID)
  operationId: PostCustomer
  description: >
    Create a customer without a predefined ID.

    The customer's primary address

    will be used as the default address for payment

    instruments, subscriptions and invoices if none

    are provided.


    If you wish to create the customer with a predefined

    ID (which we recommend to prevent duplication), you

    may use our `PUT` request described below.


    Read our guide to [preventing
    duplicates](https://api-guides.rebilly.com/core-concepts/preventing-duplicates)

    to understand more.
  requestBody:
    $ref: ../components/requestBodies/Customer.yaml
  responses:
    '201':
      $ref: ../components/responses/Customer.yaml
    '401':
      $ref: ../components/responses/Unauthorized.yaml
    '409':
      $ref: ../components/responses/Conflict.yaml
    '422':
      $ref: ../components/responses/ValidationError.yaml
  x-code-samples:
    - lang: PHP
      source:
        $ref: ../code_samples/PHP/customers/post.php
