parameters:
  - $ref: ../components/parameters/resourceId.yaml
get:
  x-products:
    - Core
  tags:
    - Customers
  summary: Retrieve a customer
  operationId: GetCustomer
  x-sdk-operation-name: get
  security:
    - SecretApiKey: []
    - JWT: []
    - ApplicationJWT: []
  description: |-
    Retrieves a customer with a specified identifier string.
  parameters:
    - $ref: ../components/parameters/collectionExpand.yaml
    - $ref: ../components/parameters/collectionFields.yaml
  responses:
    '200':
      description: Customer retrieved.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Customer.yaml
    '401':
      $ref: ../components/responses/Unauthorized.yaml
    '403':
      $ref: ../components/responses/Forbidden.yaml
    '404':
      $ref: ../components/responses/NotFound.yaml
  x-codeSamples:
    - lang: PHP
      source:
        $ref: '../code_samples/PHP/customers@{id}/get.php'
    - lang: JavaScript
      source:
        $ref: '../code_samples/JavaScript/customers@{id}/get.js'
    - lang: PHP
      label: PHP-SDK-3.0
      source:
        $ref: '../code_samples/PHP-SDK-3.0/customers@{id}/get.php'
put:
  x-products:
    - Core
  tags:
    - Customers
  summary: Upsert a customer
  operationId: PutCustomer
  x-sdk-operation-name: update
  description: |-
    Creates or updates (upserts) a customer with specified identifier
    string.

    If the customer already has an identifier within your system, and
    you want to create a customer with a specified ID &mdash; use
    this operation to prevent duplicate customers. For more information,
    see [Prevent duplicate customers](https://www.rebilly.com/docs/dev-docs/concepts/#prevent-duplicate-customers).
  requestBody:
    $ref: ../components/requestBodies/Customer.yaml
  responses:
    '200':
      $ref: ../components/responses/Customer.yaml
    '201':
      description: Customer with specified ID created.
      headers:
        Location:
          $ref: ../components/headers/Location.yaml
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Customer.yaml
    '401':
      $ref: ../components/responses/Unauthorized.yaml
    '403':
      $ref: ../components/responses/Forbidden.yaml
    '409':
      $ref: ../components/responses/Conflict.yaml
    '422':
      $ref: ../components/responses/ValidationError.yaml
  x-codeSamples:
    - lang: PHP
      source:
        $ref: '../code_samples/PHP/customers@{id}/put.php'
    - lang: JavaScript
      source:
        $ref: '../code_samples/JavaScript/customers@{id}/put.js'
delete:
  x-products:
    - Core
  parameters:
    - in: query
      name: targetCustomerId
      required: true
      schema:
        type: string
      description: |-
        ID of the customer that you want to delete. This field is used
        to obtain the customer's data.
  tags:
    - Customers
  summary: Merge and delete a customer
  operationId: DeleteCustomer
  x-sdk-operation-name: merge
  description: |-
    Merges one duplicate customer to another target customer and
    deletes the former.
  responses:
    '204':
      description: Customer is merged and deleted.
    '401':
      $ref: ../components/responses/Unauthorized.yaml
    '403':
      $ref: ../components/responses/Forbidden.yaml
    '404':
      $ref: ../components/responses/NotFound.yaml
  x-codeSamples:
    - lang: PHP
      label: PHP-SDK-3.0
      source:
        $ref: '../code_samples/PHP-SDK-3.0/customers@{id}/delete.php'
